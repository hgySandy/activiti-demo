<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.home.demo</groupId>
	<artifactId>activiti-demo</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>
	<name>Activiti Demo</name>
	
	<!-- activiti-rest.war集成 -->
	<!-- 属性配置以及各个依赖的版本 -->
	<properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>  
		<!-- 各个依赖的版本号 -->
		<activiti.version>5.16.4</activiti.version>
		<jetty.version>8.1.11.v20130520</jetty.version>
		<commons-lang3.version>3.1</commons-lang3.version>
		<commons-io.version>2.4</commons-io.version>
		<slf4j.version>1.7.2</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		<hibernate.version>4.1.4.Final</hibernate.version>
		<cxf.version>2.6.14</cxf.version>
		<drools.version>5.5.0.Final</drools.version>
		<mule.version>3.4.0</mule.version>

		<!-- 设置编码为UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
	<!-- Inherit defaults from Spring Boot -->  
    <parent>  
        <groupId>org.springframework.boot</groupId>  
        <artifactId>spring-boot-starter-parent</artifactId>  
        <version>1.4.0.RELEASE</version>   
    </parent> 
	
	<!-- 依赖定义 -->
	<dependencies>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency> 
	   <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
	   </dependency> 
	 
         <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-test</artifactId>
		  <scope>test</scope>
		</dependency>
		<!-- Springboot 热部署 -->  
	   <dependency>  
	       <groupId>org.springframework.boot</groupId>  
	       <artifactId>spring-boot-devtools</artifactId>  
	       <optional>true</optional>
	   </dependency>
		<dependency>
	       <groupId>org.springframework.boot</groupId>
	       <artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<!-- 
		<dependency>
            <groupId>org.activiti</groupId>
            <artifactId>activiti-spring-boot</artifactId>
            <version>${activiti.version}</version>
        </dependency>  
        -->
        
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- Spring Boot 的一个插件，可以从classpath的templates目录查找视图并且支持布局（类似sitemesh） -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
            <version>${spring.boot.version}</version>
        </dependency> -->
        
         <!-- tomcat 的支持. scope=provided的情况，则可以认为这个provided是目标容器已经provide这个artifact --> 
		<dependency>  
            <groupId>org.springframework.boot</groupId>  
            <artifactId>spring-boot-starter-tomcat</artifactId>  
            <scope>provided</scope>  
        </dependency> 
        
        <dependency>  
            <groupId>org.apache.tomcat.embed</groupId>  
            <artifactId>tomcat-embed-jasper</artifactId>  
            <scope>provided</scope>  
        </dependency> 
  
        <!-- servlet 依赖. -->  
         <dependency>  
            <groupId>javax.servlet</groupId>  
            <artifactId>javax.servlet-api</artifactId>  
            <scope>provided</scope>  
        </dependency>  
        
<!-- 		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency> -->
        
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

	    
	    <!-- 阿里巴巴数据源包 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.0.2</version>
        </dependency>
        <!-- 阿里巴巴json包 -->
       	<dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.1.40</version>
        </dependency>
		
		<!-- activit begin -->
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-engine</artifactId>
			<version>${activiti.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.mybatis</groupId>
					<artifactId>mybatis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.activiti</groupId>
			<artifactId>activiti-spring</artifactId>
			<version>${activiti.version}</version>
		</dependency> 
		<!-- 		
		<dependency>
		  <groupId>org.activiti</groupId>
		  <artifactId>activiti-rest</artifactId>
		  <version>${activiti.version}</version>
		</dependency> 
		 -->
		<dependency>
	      <groupId>org.activiti</groupId>
	      <artifactId>activiti-json-converter</artifactId>
	      <version>${activiti.version}</version>
	    </dependency>
	   
		<!-- activit end -->

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.172</version>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
			<version>3.3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>


		<!-- jetty -->
		<dependency>
			<groupId>org.eclipse.jetty.aggregate</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-jsp</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- WEB end -->

		<!-- hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.1.Final</version>
		</dependency>

		<!-- Jackson JSON Mapper -->
		<!-- SpringMVC的@ResponseBody需要使用 -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>

		<!-- UTILS -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils-core</artifactId>
            <version>1.8.3</version>
        </dependency>

		<!-- LOGGING begin -->
		<!--
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency> -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<!-- LOGGING end -->

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.4.8</version>
		</dependency>

		<!-- 单元测试-Junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

		<!-- 邮件 -->
		<dependency>
			<groupId>org.subethamail</groupId>
			<artifactId>subethasmtp</artifactId>
			<version>3.1.7</version>
		</dependency>
		
		   	<!-- Swagger支持 -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.6.1</version>
            <exclusions>
            	<exclusion>
            		<groupId>org.springframework</groupId>
            		<artifactId>spring-context</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.6.1</version>
        </dependency>
	</dependencies>

	<!-- 编译时一些插件依赖 -->
	<build>
		<plugins>
			<!-- compiler插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<!-- Activiti最低要求JDK1.5 -->
					<source>1.8</source>
					<target>1.8</target>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- resource插件, 设定编码，防止中文乱码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<plugin>  
	            <groupId>org.springframework.boot</groupId>  
	            <artifactId>spring-boot-maven-plugin</artifactId>  
	            <dependencies>  
	                <dependency>  
	                    <groupId>org.springframework</groupId>  
	                    <artifactId>springloaded</artifactId>  
	                    <version>1.2.6.RELEASE</version>  
	                </dependency>  
	            </dependencies>  
	        </plugin>

			<!-- jetty插件, 设定context path与spring profile -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- 初始化数据 -->
	<profiles>
		<profile>
			<id>init-db</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<configuration>
							<target>
								<property file="src/main/resources/application.properties" />
								<property name="sql.type" value="${sql.type}" />
								<property name="dbunit.datatype" value="org.dbunit.ext.h2.H2DataTypeFactory" />

								<taskdef name="dbunit" classname="org.dbunit.ant.DbUnitTask" classpathref="maven.runtime.classpath" />
								
								<!-- add init datas -->
								<dbunit driver="${jdbc.driver}" url="${jdbc.url}" userid="${jdbc.username}" password="${jdbc.password}">
									<dbconfig>
										<property name="datatypeFactory" value="${dbunit.datatype}" />
									</dbconfig>
									<classpath refid="maven.runtime.classpath" />
									<operation type="CLEAN_INSERT" src="src/main/resources/data/identity-data.xml" format="flat" transaction="true" />
								</dbunit>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
